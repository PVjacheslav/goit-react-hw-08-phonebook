{"version":3,"file":"static/js/785.29fc4040.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactsBook.contacts.items;\nexport const selectIsLoading = state => state.contactsBook.contacts.isLoading;\nexport const selectError = state => state.contactsBook.contacts.error;\nexport const selectFilter = state => state.contactsBook.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from \"styled-components\";\nimport { Form, Field, ErrorMessage } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  margin: auto;\n  background-color: #F0F011;\n  border: 4px solid #2450DB;\n  border-radius: 4px;\n  \n`;\n\nexport const StyledField = styled(Field)`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #2450DB;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 4px solid #2450DB;\n  color: #2450DB;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #b9bcd3;\n  }\n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\n    color: #F5530D;\n`","import { Formik } from 'formik';\nimport {ImPlus} from \"react-icons/im\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport * as Yup from 'yup';\nimport { Button, ErrMsg, Label, StyledField, StyledForm } from './ContactForm.styled';\nimport Notiflix from 'notiflix';\n\nconst initialValues = { name: '', number: '' };\nconst schema = Yup.object().shape({\n    name:   Yup.string().min(2, \"Too short!\"),\n    number: Yup.number(),\n})\n\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const handleSubmit = (values, {resetForm})=> {\n        const isInContacts = contacts.find(\n          ({name}) => name.toLowerCase().trim() === values.name.toLowerCase().trim()\n        );\n\n        if (isInContacts) {\n            Notiflix.Notify.failure(`${values.name} is already in contacts!`, {\n                position: 'left-top',\n                distance: '12px',\n              });\n            return;\n            }\n        dispatch(\n            addContacts({ \n                name: values.name,\n                number: values.number,\n            })\n        );\n        resetForm();\n    };\n\n    return (\n      <>\n        <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n        >\n            <StyledForm autoComplete=\"off\">\n                <Label htmlFor=\"name\">\n                    Name\n                        <StyledField type=\"text\" name=\"name\" required />\n                        <ErrMsg name=\"name\" />\n                </Label>\n\n                <Label htmlFor=\"number\">\n                    Number\n                        <StyledField type=\"tel\" name=\"number\" required />\n                        <ErrMsg name=\"number\" />\n                </Label>\n\n                    <Button type=\"submit\">\n                        <ImPlus fill=\"#2450DB\" width=\"12\" height=\"12\"/>\n                        Add Contact</Button>\n            </StyledForm>\n        </Formik>\n      </>\n    );\n}\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  margin: 16px auto;\n  border-radius: 4px;\n  background-color: #F0F011 ;\n  border: 4px solid #2450DB ;\n  list-style: none;\n`;\n\nexport const NoContact = styled.span`\n  text-align: center;\n  font-size: 20px;\n  color: #777777;\n  margin-top: 10px;\n`;\n\nexport const Item = styled.li`\n  background-color: #ffffff;\n  border: 4px solid #2450DB ;\n  padding: 8px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px 8px;\n  border: 3px solid #2450DB;\n  display: flex;\n  align-items: center;\n`;","import { ImBin } from \"react-icons/im\";\nimport { BiSolidContact } from \"react-icons/bi\";\nimport { Item, List, Button, NoContact } from \"./ContactList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectFilter, selectVisibleContacts } from \"redux/contacts/selectors\";\nimport { deleteContacts } from \"redux/contacts/operations\";\n\nconst ContactList = () => {\n    const filteredContacts = useSelector(selectVisibleContacts);\n    const savedFilter = useSelector(selectFilter);\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    return(\n        <List>\n            {contacts.length === 0 ? (\n                <NoContact>\n                    There are no contacts yet\n                </NoContact>\n            ) : (\n                <> \n                {filteredContacts.map(({ id, name, number }) => (\n                    <Item key={id}>\n                        <BiSolidContact fill=\"#2450DB\" size={25}/>\n                        {name} : {number}\n                        {<Button\n                            type=\"button\"\n                            name=\"delete\"\n                            value={savedFilter}\n                            onClick={() => dispatch(deleteContacts(id))}>\n                            <ImBin fill=\"#000000\" width=\"20\" height=\"20\"/>\n                            delete\n                            </Button>}\n                        </Item>\n                    ))}\n                </>\n            )}\n        </List>\n    )\n}\n\nexport default ContactList;","import ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoading } from \"redux/contacts/selectors\";\n\nexport default function Tasks() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <title>Your contacts</title>\n            <ContactForm />\n            <div>{isLoading && <Loader />}</div>\n            <ContactList/>\n        </>\n    );\n}"],"names":["selectContacts","state","contactsBook","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","StyledForm","styled","Form","StyledField","Field","Label","Button","ErrMsg","ErrorMessage","initialValues","number","schema","Yup","shape","min","dispatch","useDispatch","useSelector","validationSchema","onSubmit","values","resetForm","find","trim","Notiflix","position","distance","addContacts","autoComplete","htmlFor","type","required","fill","width","height","List","NoContact","Item","filteredContacts","savedFilter","length","map","id","size","value","onClick","deleteContacts","Tasks","useEffect","fetchContacts","Loader"],"sourceRoot":""}