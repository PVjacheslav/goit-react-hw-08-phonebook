{"version":3,"file":"static/js/427.52efe258.chunk.js","mappings":"iQAEaA,EAAOC,EAAAA,GAAAA,KAAH,8MAWJC,EAAQD,EAAAA,GAAAA,MAAH,oIAQLE,EAAQF,EAAAA,GAAAA,MAAH,uGAOLG,EAASH,EAAAA,GAAAA,OAAH,0S,SCtBbI,EAAgB,CAAEC,SAAU,GAAIC,MAAO,GAAIC,SAAU,IACrDC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,SAAUI,EAAAA,KACVH,MAAOG,EAAAA,KAAaH,QACpBC,SAAUE,EAAAA,KAAaE,IAAI,EAAG,yBAGnBC,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACI,+BACI,SAAC,KAAD,CACIV,cAAeA,EACfW,iBAAkBP,EAClBQ,SAhBS,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC5BL,GACIM,EAAAA,EAAAA,IAAa,CACTC,KAAMH,EAAOZ,SACbC,MAAOW,EAAOX,MACdC,SAAUU,EAAOV,YAGzBW,GACH,EAIO,UAKI,UAACnB,EAAD,CAAMsB,aAAa,MAAnB,WACI,UAACpB,EAAD,CAAOqB,QAAQ,WAAf,UAA0B,YAEtB,SAACpB,EAAD,CACIqB,KAAK,OACLH,KAAK,WACLI,UAAQ,KAEZ,SAAC,KAAD,CAAcJ,KAAK,iBAEvB,UAACnB,EAAD,CAAOqB,QAAQ,QAAf,UAAuB,SAEnB,SAACpB,EAAD,CACIqB,KAAK,QACLH,KAAK,QACLI,UAAQ,KAEZ,SAAC,KAAD,CAAcJ,KAAK,cAEvB,UAACnB,EAAD,CAAOqB,QAAQ,WAAf,UAA0B,YAEtB,SAACpB,EAAD,CACIqB,KAAK,WACLH,KAAK,WACLI,UAAQ,KAEZ,SAAC,KAAD,CAAcJ,KAAK,iBAEvB,SAACjB,EAAD,CAAQoB,KAAK,SAAb,SAAsB,mBAOzC,ECnEc,SAASE,IACpB,OACI,iCACI,2BAAO,kBACP,SAACb,EAAD,MAGX,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  background-color: #F0F011;\n  border: 4px solid #2450DB;\n  border-radius: 4px;\n  margin: 0 auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #2450DB;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  color: #171718;\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 4px solid #2450DB;\n  color: #2450DB;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #b9bcd3;\n  }\n`;","import { ErrorMessage, Formik } from 'formik/dist';\nimport { useDispatch } from 'react-redux';\nimport { userRegister } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport { Button, Form, Input, Label } from './RegisterForm.styled';\n\nconst initialValues = { username: '', email: '', password: '' };\nconst schema = Yup.object().shape({\n  username: Yup.string(),\n  email: Yup.string().email(),\n  password: Yup.string().min(7, 'Too short password!'),\n});\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = (values, { resetForm }) => {\n        dispatch(\n            userRegister({\n                name: values.username,\n                email: values.email,\n                password: values.password,\n            })\n        );\n        resetForm();\n    };\n\n    return (\n        <>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={schema}\n                onSubmit={handleSubmit}\n            >\n                <Form autoComplete=\"off\">\n                    <Label htmlFor=\"username\">\n                        Uresname\n                        <Input\n                            type=\"text\"\n                            name=\"username\"\n                            required\n                        />\n                        <ErrorMessage name=\"username\" />\n                    </Label>\n                    <Label htmlFor=\"email\">\n                        Email\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                        />\n                        <ErrorMessage name=\"email\" />\n                    </Label>\n                    <Label htmlFor=\"password\">\n                        Password\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            required\n                        />\n                        <ErrorMessage name=\"password\" />\n                    </Label>\n                    <Button type=\"submit\">\n                        Register\n                    </Button>\n                </Form>\n            </Formik>\n        </>\n    );\n};\n","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\n\nexport default function Register() {\n    return (\n        <>\n            <title>Registration</title>\n            <RegisterForm/>\n        </>\n    )\n}"],"names":["Form","styled","Label","Input","Button","initialValues","username","email","password","schema","Yup","shape","min","RegisterForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","userRegister","name","autoComplete","htmlFor","type","required","Register"],"sourceRoot":""}